}
}
}
cat("Best split", split_best, "\n")
m <- split_best["m"]
v <- split_best["v"]
t <- split_best["t"]
B[,M+1] <- B[,m]*H(-(x[,v]-t))
splits[[M+1]] <- rbind(splits[[m]], c(s=-1,v,t))
B[,m] <- B[,m]*H(x[,v]-t)
splits[[m]] <- rbind(splits[[m]], c(s=1,v,t))
}
return(list(B=B,splits=splits))
}
H <- function(x) {
return(as.numeric(x>=0))
}
LOF <- function(form,data) {
ff <- lm(form,data)
return(sum(residuals(ff)^2))
}
init_B <- function(N,Mmax) {
B <- data.frame(matrix(NA,nrow=N,ncol=(Mmax+1)))
B[,1] <- 1
names(B) <- c("B0",paste0("B",1:Mmax))
return(B)
}
split_points <- function(xv,Bm) {
out <- sort(unique(xv[Bm>0]))
return(out[-length(out)])
}
# Test
set.seed(123); n <- 10
x <- data.frame(x1=rnorm(n),x2=rnorm(n))
y <- rnorm(n)
rp_fwd <- recpart_fwd(y,x,Mmax=9)
rp_fwd$splits
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education,logwage = Wage$logwage))
residuals.mars <- function(object){
out = object$residuals
out = data.frame(out)
colnames(out) <- paste("residuals of",object$formula[[2]]) #column name
rownames(out) <- NULL
return(out)
}
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education,logwage = Wage$logwage))
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
head(cbind(ff,p1,p2)) # columns should be identical
source("mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education,logwage = Wage$logwage))
head(cbind(ff,p1,p2)) # columns should be identical
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education,logwage = Wage$logwage))
head(cbind(ff,p1,p2)) # columns should be identical
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education,logwage = Wage$logwage))
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
#test Weather dataset
s <- read.csv("weather.csv")
mc <- mars.control(Mmax = 10)
form <-as.formula("MXSPD ~ GUST + MAX")
fa <- mars(formula = form, data = s, control = mc)
ff <- fitted(fa)
p1 <- predict(fa)
p2 <- predict(fa,newdata=data.frame(GUST=s$GUST,MAX=s$MAX))
p2 <- predict(mout,nd=data.frame(age=Wage$age,education=Wage$education))
predict.mars <- function(object,newdata){
if(missing(newdata) || is.null(newdata)) {
X <- object$B
}
else {
term <- terms(object$formula)
term <- delete.response(term)
modelf <- model.frame(term,newdata)
modelt <- attr(modelf,"terms")
X <- model.matrix(modelt, modelf)
X <- splitX(X, object$splits)
}
beta <- object$coefficients
drop(X %*% beta)
}
splitX <- function(X, splits) {
Xout <- matrix(0, nrow = nrow(X), ncol = length(splits))
for (i in 1:length(splits)) {
Xout[,i] <- splX(X,splits[[i]])
}
Xout
}
splX <- function(X,s) {
Xout <- rep(1,nrow(X))
if(nrow(s)>1) {
for(i in 2:nrow(s)){
Xout <- Xout * H(X[,s[i,"v"]],s[i,"s"],s[i,"t"])
}
}
return(Xout)
}
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
head(cbind(ff,p1,p2)) # columns should be identical
mout # tests print method
summary(mout) #test summary method
anova(mout) # test anova method
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
p2 <- predict.mars(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
source("predict.R")
p2 <- predict.mars(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict.mars(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
predict.mars <- function(object,newdata){
if(missing(newdata) || is.null(newdata)) {
X <- object$B
}
else {
term <- terms(object$formula)
term <- delete.response(term)
modelf <- model.frame(term,newdata)
modelt <- attr(modelf,"terms")
X <- model.matrix(modelt, modelf)
X <- splitX(X, object$splits)
}
beta <- object$coefficients
drop(X %*% beta)
}
splitX <- function(X, splits) {
Xout <- matrix(0, nrow = nrow(X), ncol = length(splits))
for (i in 1:length(splits)) {
Xout[,i] <- splX(X,splits[[i]])
}
Xout
}
splX <- function(X,s) {
Xout <- rep(1,nrow(X))
if(nrow(s)>1) {
for(i in 2:nrow(s)){
Xout <- Xout * H(X[,s[i,"v"]],s[i,"s"],s[i,"t"])
}
}
return(Xout)
}
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
head(cbind(ff,p1,p2)) # columns should be identical
mout # tests print method
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("predict.R")
source("anova.R")
library(MASS)
source("Predict.R")
source("Predict.R")
setwd("E:/Currentdirectory/SFUStat360Projects/Projects/Group22")
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
library(earth)
library(rpart)
mars  <- function(formula ,data, control = NULL, ...) {
cc <- match.call()
mf <- model.frame(formula, data)
y <- model.response(mf)
mt <- attr(mf, "terms")
x <- model.matrix(mt, mf)
x_names <- colnames(x)
if(is.null(control)) {
control <- mars.control()
}
fwd_out <- fwd_stepwise(y, x, control)
bwd_out <- bwd_stepwise(fwd_out, control)
fit <- lm(y~.-1,data = data.frame(y = y,bwd_out$B))
out <- c(list(call = cc, formula = formula, y = y, B = bwd_out$B, splits = bwd_out$splits, x_names = x_names),fit)
class(out) <- c("mars", class(fit))
return(out)
}
mars.control <- function(Mmax = 2, d=3,trace=FALSE) {
control <- new_mars.control(Mmax, d, trace)
validate_mars.control(control)
return (control)
}
new_mars.control <- function(Mmax, d, trace) {
structure(list(Mmax = Mmax, d = d, trace = trace), class = 'mars.control')
}
validate_mars.control <- function(control) {
if(control$Mmax < 2) {
warning("Input Mmax must be >= 2; setting to 2")
Mmax <- 2
}
}
H <- function(x){
return(pmax(0,x))
}
fwd_stepwise <- function(y,x,control){
N <- length(y)
n <- ncol(x)
B <- matrix(1, nrow = N, ncol = 1)
splits <- list(data.frame(m=0,v=0,s=NA,t=NA))
M <- 1
while(M <= control$Mmax) {
lof_best <- Inf
for(m in 1:M) {
yy <- setdiff(1:n, splits[[m]]$v)
for(v in yy){
tt <- split_points(x[,v],B[,m])
for(t in tt) {
Bnew <- data.frame(B[,(1:M)[-m]],
Btem1=B[,m]*H(x[,v]-t),Btem2=B[,m]*H(-(x[,v]-t))) # ** 1
gdat <- data.frame(y=y,Bnew)
lof <- LOF(y~.,gdat, control)
if(lof < lof_best) {
lof_best <- lof
split_best <- c(m=m,v=v,t=t)
}
}
}
}
m <- split_best["m"]; v <- split_best["v"]; t <- split_best["t"]
B <- cbind(B, B[,m]*H(+(x[,v]-t)))
B <- cbind(B, B[,m]*H(-(x[,v]-t)))
leftdf <- rbind(splits[[m]], c(m,v,s=-1,t))
rightdf <- rbind(splits[[m]], c(m,v,s=1,t))
splits <- c(splits,list(leftdf), list(rightdf))
M <- M + 2
}
colnames(B) <- paste0("B",(0:(ncol(B)-1)))
fwd_list <- list(y=y,B=B,splits=splits)
return(fwd_list)
}
bwd_stepwise <- function(bwd_in, control){
data <- data.frame(y = bwd_in$y, bwd_in$B)
lof_best <- LOF(y ~ .,data, control)
Mmax <- ncol(bwd_in$B)
KStar <- JStar <- bwd_in$B
splits <- KSplit <-  bwd_in$splits
for(M in Mmax:2) {
L <- KStar
split <- KSplit
b <- Inf
for(m in 2:M) {
K <- L[,-m]
data2 <- data.frame(y = bwd_in$y, K)
lof <- LOF(y ~ ., data2, control)
if(lof < b) {
b <- lof
KStar <- K
KSplit <- split[-m]
}
if(lof < lof_best) {
lof_best <- lof
JStar <- K
splits <- split[-m]
}
}
}
bwd_list <- list(y = bwd_in$y, B = JStar, splits = splits)
return(bwd_list)
}
split_points <- function(xv,Bm){
out <- sort(unique(xv[Bm>0]))
return(out[-length(out)])
}
LOF <- function(form,data, control) {
NR <- nrow(data)
NC <- ncol(data) - 1
ff <- lm(form,data)
SumRes <- sum(residuals(ff)^2)
SumHat <- sum(hatvalues(ff))
C <-   SumHat + control$d * NC
out <- SumRes * (NR / (NR - C)^2)
return(out)
}
anova.mars<-function(mout)
{
A<-mout$B
y<-mout$y
for(i in 1: (dim(A)[2]))
{
variance_of_output <- var((A[,i]*mout$coefficients[i]))
cat(paste(c("Variance of ",
names(mout$coefficients)[i], "is ",
variance_of_output,
" with % of explained variance ",
100*variance_of_output/var(y), "%", "\n" )))
}
}
predict.mars <- function(object,newdata){
if(missing(newdata) || is.null(newdata)) {
X <- object$B
}
else {
term <- terms(object$formula)
term <- delete.response(term)
modelf <- model.frame(term,newdata)
modelt <- attr(modelf,"terms")
X <- model.matrix(modelt, modelf)
X <- splitX(X, object$splits)
}
beta <- object$coefficients
drop(X %*% beta)
}
splitX <- function(X, splits) {
Xout <- matrix(0, nrow = nrow(X), ncol = length(splits))
for (i in 1:length(splits)) {
Xout[,i] <- splX(X,splits[[i]])
}
Xout
}
splX <- function(X,s) {
Xout <- rep(1,nrow(X))
if(nrow(s)>1) {
for(i in 2:nrow(s)){
Xout <- Xout * H(X[,s[i,"v"]],s[i,"s"],s[i,"t"])
}
}
return(Xout)
}
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
H <- function(x,s,t){
return(pmax(0,s*(x-t)))
}
p1 <- predict.mars(mout)
p2 <- predict.mars(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
head(cbind(ff,p1,p2)) # columns should be identical
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
p1 <- predict.mars(mout)
p2 <- predict.mars(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
source("mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("predict.R")
source("anova.R")
library(MASS)
library(ISLR)
library(readxl)
data(Wage)
mc <- mars.control(Mmax=10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict.mars(mout)
p2 <- predict.mars(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
head(cbind(ff,p1,p2)) # columns should be identical
mout # tests print method
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
H <- function(x,s,t){
return(pmax(0,s*(x-t)))
}
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
head(cbind(ff,p1,p2)) # columns should be identical
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
source("Mars.R")
source("summary.R")
source("print.R")
source("plot.R")
source("Predict.R")
source("anova.R")
library(MASS)
library(ISLR)
data(Wage)
mc <- mars.control(Mmax = 10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict(mout)
p2 <- predict(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
head(cbind(ff,p1,p2)) # columns should be identical
data(Wage)
mc <- mars.control(Mmax=10)
mout <- mars(wage ~ age + education, data=Wage, control=mc)
ff <- fitted(mout)
p1 <- predict.mars(mout)
p2 <- predict.mars(mout,newdata=data.frame(age=Wage$age,education=Wage$education))
head(cbind(ff,p1,p2)) # columns should be identical
mout # tests print method
summary.mars(mout) #test summary method
summary(mout) #test summary method
anova.mars(mout) # test anova method
plot.mars(mout) # test plot method
forest <- read.csv("forestfires.csv")
